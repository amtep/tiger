&[
    ("Abs_CFixedPoint", Args::Args(&[DType(CFixedPoint)]), CFixedPoint),
    ("Abs_float", Args::Args(&[DType(float)]), float),
    ("Abs_int32", Args::Args(&[DType(int32)]), int32),
    ("Abs_int64", Args::Args(&[DType(int64)]), int64),
    ("AccessConstructionSpeeds", Args::Args(&[]), Unknown),
    ("AccessMapEditorLayerBorders", Args::Args(&[]), Unknown),
    ("AccessMetaPlayer", Args::Args(&[]), Vic3(Player)),
    ("AccessPlayer", Args::Args(&[]), Vic3(Player)),
    ("AccessScopeReference", Args::Args(&[DType(Unknown)]), Unknown),
    ("AddLocalizationIf", Args::Args(&[DType(bool), DType(CString)]), CString),
    ("AddTextIf", Args::Args(&[DType(bool), DType(CString)]), CString),
    ("Add_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Add_CVector2f", Args::Args(&[DType(CVector2f), DType(CVector2f)]), CVector2f),
    ("Add_float", Args::Args(&[DType(float), DType(float)]), float),
    ("Add_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Add_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Add_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Add_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("And", Args::Args(&[DType(bool), DType(bool)]), bool),
    ("And3", Args::Args(&[DType(bool), DType(bool), DType(bool)]), bool),
    ("And4", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("And5", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("And6", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("And7", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("And8", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("AreAchievementsAvailable", Args::Args(&[]), bool),
    ("BetweenInclusiveOfMax_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("BetweenInclusiveOfMax_float", Args::Args(&[DType(float), DType(float), DType(float)]), bool),
    ("BetweenInclusiveOfMax_int32", Args::Args(&[DType(int32), DType(int32), DType(int32)]), bool),
    ("BetweenInclusiveOfMax_int64", Args::Args(&[DType(int64), DType(int64), DType(int64)]), bool),
    ("BetweenInclusiveOfMax_uint32", Args::Args(&[DType(uint32), DType(uint32), DType(uint32)]), bool),
    ("BetweenInclusiveOfMax_uint64", Args::Args(&[DType(uint64), DType(uint64), DType(uint64)]), bool),
    ("BetweenInclusiveOfMin_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("BetweenInclusiveOfMin_float", Args::Args(&[DType(float), DType(float), DType(float)]), bool),
    ("BetweenInclusiveOfMin_int32", Args::Args(&[DType(int32), DType(int32), DType(int32)]), bool),
    ("BetweenInclusiveOfMin_int64", Args::Args(&[DType(int64), DType(int64), DType(int64)]), bool),
    ("BetweenInclusiveOfMin_uint32", Args::Args(&[DType(uint32), DType(uint32), DType(uint32)]), bool),
    ("BetweenInclusiveOfMin_uint64", Args::Args(&[DType(uint64), DType(uint64), DType(uint64)]), bool),
    ("BetweenInclusive_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("BetweenInclusive_float", Args::Args(&[DType(float), DType(float), DType(float)]), bool),
    ("BetweenInclusive_int32", Args::Args(&[DType(int32), DType(int32), DType(int32)]), bool),
    ("BetweenInclusive_int64", Args::Args(&[DType(int64), DType(int64), DType(int64)]), bool),
    ("BetweenInclusive_uint32", Args::Args(&[DType(uint32), DType(uint32), DType(uint32)]), bool),
    ("BetweenInclusive_uint64", Args::Args(&[DType(uint64), DType(uint64), DType(uint64)]), bool),
    ("Between_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("Between_float", Args::Args(&[DType(float), DType(float), DType(float)]), bool),
    ("Between_int32", Args::Args(&[DType(int32), DType(int32), DType(int32)]), bool),
    ("Between_int64", Args::Args(&[DType(int64), DType(int64), DType(int64)]), bool),
    ("Between_uint32", Args::Args(&[DType(uint32), DType(uint32), DType(uint32)]), bool),
    ("Between_uint64", Args::Args(&[DType(uint64), DType(uint64), DType(uint64)]), bool),
    ("BindFoldOutContext", Args::Args(&[]), void),
    ("BoolTo1And2", Args::Args(&[DType(bool)]), int32),
    ("BoolTo2And1", Args::Args(&[DType(bool)]), int32),
    ("CalcDynTrendLatestDate", Args::Args(&[DType(Vic3(DataDynamicTrend))]), CString),
    ("CalcDynTrendOldestDate", Args::Args(&[DType(Vic3(DataDynamicTrend))]), CString),
    ("CanEditSettingsAfterHost", Args::Args(&[]), bool),
    ("CanGetAchievements", Args::Args(&[]), bool),
    ("CanOpenLobby", Args::Args(&[]), bool),
    ("CanOpenRightClickContextMenu", Args::Args(&[]), bool),
    ("ChangeAllConstructionSpeed", Args::Args(&[DType(Vic3(ProductionMethod))]), Vic3(Command)),
    ("ChangeAllConstructionSpeedTooltip", Args::Args(&[DType(Vic3(ProductionMethod))]), CString),
    ("ClearDynamicTerrainOverrideForAllProvinces", Args::Args(&[]), void),
    ("ClearHostError", Args::Args(&[]), void),
    ("CloseAllTooltips", Args::Args(&[]), void),
    ("ColorToVector3f", Args::Args(&[DType(CVector4f)]), CVector3f),
    ("ColorToVector3i", Args::Args(&[DType(CVector4f)]), CVector3i),
    ("ColorToVector4i", Args::Args(&[DType(CVector4f)]), CVector4i),
    ("ConcatIfNeitherEmpty", Args::Args(&[DType(CString), DType(CString)]), CString),
    ("Concatenate", Args::Args(&[DType(CString), DType(CString)]), CString),
    ("Concept", Args::Args(&[IType(Item::GameConcept), DType(CString)]), CString),
    ("CopyBuildVersionInfoToClipboard", Args::Args(&[]), void),
    ("CopyRNGSeedToClipboard", Args::Args(&[]), void),
    ("CopyServerID", Args::Args(&[]), void),
    ("CurrentAndMaxToProgressbarValueInt32", Args::Args(&[DType(int32), DType(int32)]), float),
    ("DataModelFirst", Args::Args(&[DType(Unknown), DType(Unknown)]), Unknown),
    ("DataModelHasItems", Args::Args(&[DType(Unknown)]), bool),
    ("DataModelLast", Args::Args(&[DType(Unknown), DType(Unknown)]), Unknown),
    ("DataModelRepeatedItem", Args::Args(&[DType(Unknown)]), Unknown),
    ("DataModelSkipFirst", Args::Args(&[DType(Unknown), DType(Unknown)]), Unknown),
    ("DataModelSkipLast", Args::Args(&[DType(Unknown), DType(Unknown)]), Unknown),
    ("DataModelSubSpan", Args::Args(&[DType(Unknown), DType(Unknown), DType(Unknown)]), Unknown),
    ("DebugGetMapMode", Args::Args(&[]), CString),
    ("DemobilizeSelectedArmies", Args::Args(&[]), Vic3(Command)),
    ("Divide_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Divide_CVector2f", Args::Args(&[DType(Unknown), DType(Unknown)]), CVector2f),
    ("Divide_float", Args::Args(&[DType(float), DType(float)]), float),
    ("Divide_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Divide_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Divide_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Divide_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("DoubleToFloat", Args::Args(&[DType(double)]), float),
    ("EqualTo_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("EqualTo_CVector2f", Args::Args(&[DType(CVector2f), DType(CVector2f)]), bool),
    ("EqualTo_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("EqualTo_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("EqualTo_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("EqualTo_string", Args::Args(&[DType(CString), DType(CString)]), bool),
    ("EqualTo_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("EqualTo_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("Execute", Args::Args(&[DType(Vic3(Command))]), void),
    ("ExecuteConsoleCommand", Args::Args(&[DType(CString)]), void),
    ("ExecuteConsoleCommands", Args::Args(&[DType(CString)]), void),
    ("ExecuteConsoleCommandsForced", Args::Args(&[DType(CString)]), void),
    ("FixedPointToFloat", Args::Args(&[DType(CFixedPoint)]), float),
    ("FixedPointToInt", Args::Args(&[DType(CFixedPoint)]), int32),
    ("FixedPointToProgressbarValue", Args::Args(&[DType(CFixedPoint)]), float),
    ("FocusCameraOnCityOutOfState", Args::Args(&[]), void),
    ("GameHasMultiplePlayers", Args::Args(&[]), bool),
    ("GameIsMultiplayer", Args::Args(&[]), bool),
    ("GetAIStrategy", Args::Args(&[DType(Unknown)]), Vic3(AIStrategy)),
    ("GetAcceptanceStatus", Args::Args(&[IType(Item::AcceptanceStatus)]), Vic3(AcceptanceStatus)),
    ("GetAchievementsAvailableString", Args::Args(&[]), CString),
    ("GetActivismLabelsDesc", Args::Args(&[]), CString),
    ("GetAllPowerBlocs", Args::Args(&[]), Unknown),
    ("GetApprovalRatingFromValue", Args::Args(&[DType(Unknown)]), CString),
    ("GetArrowIcon_CFixedPoint", Args::Args(&[DType(CFixedPoint)]), CString),
    ("GetArrowIcon_int32", Args::Args(&[DType(int32)]), CString),
    ("GetArrowIcon_int64", Args::Args(&[DType(int64)]), CString),
    ("GetArticleType", Args::Args(&[IType(Item::TreatyArticle)]), Vic3(ArticleType)),
    ("GetAutosaveName", Args::Args(&[]), CString),
    ("GetBasicAdmiralOrdersBreakdown", Args::Args(&[]), CString),
    ("GetBasicGeneralOrdersBreakdown", Args::Args(&[]), CString),
    ("GetBattalionGroupsList", Args::Args(&[]), CString),
    ("GetBattleCondition", Args::Args(&[IType(Item::BattleCondition)]), Vic3(BattleCondition)),
    ("GetBuildVersionDescriptionWithClickToCopy", Args::Args(&[]), CString),
    ("GetBuildingType", Args::Args(&[IType(Item::BuildingType)]), Vic3(BuildingType)),
    ("GetCanGoToFrontend", Args::Args(&[]), bool),
    ("GetCanGoToFrontendDesc", Args::Args(&[]), CString),
    ("GetCharacterTrait", Args::Args(&[IType(Item::CharacterTrait)]), Vic3(CharacterTrait)),
    ("GetCohesionLevel", Args::Args(&[DType(Unknown)]), Vic3(CohesionLevel)),
    ("GetCohesionLevels", Args::Args(&[]), Unknown),
    ("GetCombatUnitGroup", Args::Args(&[IType(Item::CombatUnitGroup)]), Vic3(CombatUnitGroup)),
    ("GetCombatUnitType", Args::Args(&[IType(Item::CombatUnit)]), Vic3(CombatUnitType)),
    ("GetCommanderOrderType", Args::Args(&[IType(Item::CommanderOrder)]), Vic3(CommanderOrderType)),
    ("GetCompanyCharterType", Args::Args(&[IType(Item::CompanyCharterType)]), Vic3(CompanyCharterType)),
    ("GetCompanyCharterTypes", Args::Args(&[]), Unknown),
    ("GetConfirmationDesc", Args::Args(&[DType(Unknown)]), CString),
    ("GetConstructionSectorType", Args::Args(&[]), Vic3(BuildingType)),
    ("GetCountryDiplomaticAction", Args::Args(&[IType(Item::DiplomaticAction), DType(Vic3(Country)), DType(Vic3(Country))]), Vic3(DiplomaticAction)),
    ("GetCountryStrategicObjectiveInStateDesc", Args::Args(&[DType(Vic3(Country)), DType(Vic3(State))]), CString),
    ("GetCulture", Args::Args(&[IType(Item::Culture)]), Vic3(Culture)),
    ("GetCurrentFps", Args::Args(&[]), float),
    ("GetCurrentLoadingScreen", Args::Args(&[]), Unknown),
    ("GetDataModelSize", Args::Args(&[DType(Unknown)]), int32),
    ("GetDecreeType", Args::Args(&[IType(Item::Decree)]), Vic3(DecreeType)),
    ("GetDefaultServerName", Args::Args(&[]), CUTF8String),
    ("GetDefine", Args::Args(&[DType(CString), DType(CString)]), Unknown),
    ("GetDefineAtIndex", Args::Args(&[DType(CString), DType(CString), DType(Unknown)]), Unknown),
    ("GetDesc", Args::Args(&[DType(Vic3(Command))]), CString),
    ("GetDescriptiveText", Args::Args(&[DType(Vic3(MapInteraction))]), CString),
    ("GetDiplomaticActionType", Args::Args(&[IType(Item::DiplomaticAction)]), Vic3(DiplomaticActionType)),
    ("GetDiplomaticPlayType", Args::Args(&[IType(Item::DiplomaticPlay)]), Vic3(DiplomaticPlayType)),
    ("GetDiscordUrl", Args::Args(&[]), Unknown),
    ("GetDlcCollection", Args::Args(&[]), Unknown),
    ("GetDynTrendMax", Args::Args(&[DType(Vic3(DataDynamicTrend))]), CFixedPoint),
    ("GetDynTrendMin", Args::Args(&[DType(Vic3(DataDynamicTrend))]), CFixedPoint),
    ("GetDynTrendPlotPoints", Args::Args(&[DType(Vic3(DataDynamicTrend)), DType(CFixedPoint), DType(CFixedPoint)]), Unknown),
    ("GetEconomicDependenceOnLabel", Args::Args(&[DType(CFixedPoint)]), CString),
    ("GetEnabledDlcNames", Args::Args(&[]), Unknown),
    ("GetEnumIndex", Args::Args(&[DType(Unknown)]), CVector2i),
    ("GetEthnicities", Args::Args(&[]), Unknown),
    ("GetEventOptionTextAlignment", Args::Args(&[]), Unknown),
    ("GetFlotillaGroupsList", Args::Args(&[]), CString),
    ("GetGameVersionDisplay", Args::Args(&[]), CString),
    ("GetGameVersionInfo", Args::Args(&[]), CString),
    ("GetGameVersionInfoShort", Args::Args(&[]), CString),
    ("GetGlobalList", Args::Args(&[DType(CString)]), Unknown),
    ("GetGlobalMaxLandDefense", Args::Args(&[]), CFixedPoint),
    ("GetGlobalMaxLandOffense", Args::Args(&[]), CFixedPoint),
    ("GetGlobalMaxNavalDefense", Args::Args(&[]), CFixedPoint),
    ("GetGlobalMaxNavalOffense", Args::Args(&[]), CFixedPoint),
    ("GetGlobalRandomSeed", Args::Args(&[]), uint32),
    ("GetGlobalRandomSeedString", Args::Args(&[]), CString),
    ("GetGlobalVariable", Args::Args(&[DType(CString)]), Scope),
    ("GetGoods", Args::Args(&[IType(Item::Goods)]), Vic3(Goods)),
    ("GetGuiEntityShaderRenderpass", Args::Args(&[]), Unknown),
    ("GetGuiPositionFromPercentCoordinates", Args::Args(&[DType(Unknown), DType(Unknown), DType(Unknown)]), Unknown),
    ("GetHarvestConditionType", Args::Args(&[IType(Item::HarvestConditionType)]), Vic3(HarvestConditionType)),
    ("GetHarvestConditionTypesList", Args::Args(&[]), CString),
    ("GetHostError", Args::Args(&[]), CUTF8String),
    ("GetIdeology", Args::Args(&[IType(Item::Ideology)]), Vic3(Ideology)),
    ("GetInstitutionType", Args::Args(&[IType(Item::Institution)]), Vic3(InstitutionType)),
    ("GetInteger", Args::Args(&[DType(Unknown)]), int32),
    ("GetInterestGroupVariant", Args::Args(&[IType(Item::InterestGroup), DType(Vic3(Country))]), Vic3(InterestGroup)),
    ("GetInterestingCountrySettings", Args::Args(&[]), Unknown),
    ("GetInvParentScale", Args::Args(&[DType(Unknown)]), float),
    ("GetIsChecked", Args::Args(&[DType(Unknown)]), bool),
    ("GetJournalEntryGroup", Args::Args(&[DType(Unknown)]), Vic3(JournalEntryGroup)),
    ("GetLabel", Args::Args(&[IType(Item::TerrainLabel)]), Vic3(Label)),
    ("GetLargeFlagFrameSize", Args::Args(&[]), CVector2i),
    ("GetLargePowerBlocCoaFrameSize", Args::Args(&[]), CVector2i),
    ("GetLatestDate", Args::Args(&[DType(Vic3(DataTrend))]), CString),
    ("GetLawGroup", Args::Args(&[IType(Item::LawGroup)]), Vic3(LawGroup)),
    ("GetLawType", Args::Args(&[IType(Item::LawType)]), Vic3(LawType)),
    ("GetLegitimacyLevel", Args::Args(&[IType(Item::LegitimacyLevel)]), Vic3(LegitimacyLevel)),
    ("GetLegitimacyLevels", Args::Args(&[]), Unknown),
    ("GetLensToolbar", Args::Args(&[]), Vic3(LensToolbar)),
    ("GetLibertyDesireLevel", Args::Args(&[DType(Unknown)]), Vic3(LibertyDesireLevel)),
    ("GetLibertyDesireLevels", Args::Args(&[]), Unknown),
    ("GetLoadingScreenManager", Args::Args(&[]), Vic3(LoadingScreenManager)),
    ("GetLocalizedDefine", Args::Args(&[DType(Unknown), DType(Unknown)]), CString),
    ("GetLocalizedDefineAtIndex", Args::Args(&[DType(Unknown), DType(Unknown), DType(Unknown)]), CString),
    ("GetLoyaltyTypes", Args::Args(&[]), Unknown),
    ("GetMPChecksum", Args::Args(&[]), CString),
    ("GetManpowerColorVec", Args::Args(&[DType(Unknown)]), CVector4f),
    ("GetMapMode", Args::Args(&[DType(Unknown)]), Vic3(MapMode)),
    ("GetMapModeIcon", Args::Args(&[DType(Unknown)]), Unknown),
    ("GetMapModeIndices", Args::Args(&[]), Unknown),
    ("GetMapModeName", Args::Args(&[DType(Unknown)]), CString),
    ("GetMax", Args::Args(&[DType(Unknown)]), CFixedPoint),
    ("GetMediumFlagFrameSize", Args::Args(&[]), CVector2i),
    ("GetMediumPowerBlocCoaFrameSize", Args::Args(&[]), CVector2i),
    ("GetMetaPlayer", Args::Args(&[]), Vic3(Player)),
    ("GetMin", Args::Args(&[DType(Vic3(DataTrend))]), CFixedPoint),
    ("GetMobilizationOption", Args::Args(&[DType(Unknown)]), Vic3(MobilizationOption)),
    ("GetMobilizationOptionGroup", Args::Args(&[DType(Unknown)]), Vic3(MobilizationOptionGroup)),
    ("GetMobilizationOptionGroups", Args::Args(&[]), Unknown),
    ("GetMoraleColorString", Args::Args(&[DType(CFixedPoint)]), CString),
    ("GetMoraleColorVec", Args::Args(&[DType(CFixedPoint)]), CVector4f),
    ("GetNumCommandersInSelectedFormations", Args::Args(&[]), int32),
    ("GetNumCommandersInSelectedFormationsWithOrderActive", Args::Args(&[DType(Vic3(CommanderOrderType))]), int32),
    ("GetNumCommandersInSelectedFormationsWithOrderBlocked", Args::Args(&[DType(Vic3(CommanderOrderType))]), int32),
    ("GetNumCommandersInSelectedFormationsWithOrderNext", Args::Args(&[DType(Vic3(CommanderOrderType))]), int32),
    ("GetNumCommandersInSelectedFormationsWithOrderPossible", Args::Args(&[DType(Vic3(CommanderOrderType))]), int32),
    ("GetNumSelectedArmies", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithDemobilizationActive", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithDemobilizationBlocked", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithDemobilizationPossible", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithMobilizationActive", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithMobilizationBlocked", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithMobilizationPossible", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithRaiseConscriptsActive", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithRaiseConscriptsBlocked", Args::Args(&[]), int32),
    ("GetNumSelectedArmiesWithRaiseConscriptsPossible", Args::Args(&[]), int32),
    ("GetNumSelectedFleets", Args::Args(&[]), int32),
    ("GetNumSelectedFormations", Args::Args(&[]), int32),
    ("GetNumberAbove_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("GetNumberOfShadersCompiled", Args::Args(&[]), int32),
    ("GetOldestDate", Args::Args(&[DType(Vic3(DataTrend))]), CString),
    ("GetOpenLobbyTooltip", Args::Args(&[]), CString),
    ("GetOrganizationColorVec", Args::Args(&[DType(CFixedPoint)]), CVector4f),
    ("GetPlayer", Args::Args(&[]), Vic3(Country)),
    ("GetPlayerResourcesUrl", Args::Args(&[]), Unknown),
    ("GetPlayersCount", Args::Args(&[]), int32),
    ("GetPopNeed", Args::Args(&[IType(Item::PopNeed)]), Vic3(PopNeed)),
    ("GetPopType", Args::Args(&[IType(Item::PopType)]), Vic3(PopType)),
    ("GetPortraitRenderSize", Args::Args(&[DType(Vic3(PdxGuiWidget))]), CVector2f),
    ("GetPortraitTextureFromDna", Args::Args(&[DType(Unknown), DType(Unknown)]), Unknown),
    ("GetPowerBlocIdentity", Args::Args(&[IType(Item::PowerBlocIdentity)]), Vic3(PowerBlocIdentity)),
    ("GetPowerBlocPrincipleGroup", Args::Args(&[IType(Item::PrincipleGroup)]), Vic3(PowerBlocPrincipleGroup)),
    ("GetPrevTrendValue", Args::Args(&[DType(Vic3(DataTrend))]), CFixedPoint),
    ("GetPrevTrendValueFor", Args::Args(&[DType(Unknown), DType(Unknown)]), CFixedPoint),
    ("GetRandomLogInfo", Args::Args(&[]), CString),
    ("GetRankModifier", Args::Args(&[IType(Item::CountryRank)]), Vic3(Modifier)),
    ("GetRawTextTooltipTag", Args::Args(&[DType(CString)]), CString),
    ("GetRawTrendPlotRectWithFixedY", Args::Args(&[DType(Unknown), DType(Unknown), DType(Unknown)]), Vic3(CPdxFloatRect)),
    ("GetReligion", Args::Args(&[IType(Item::Religion)]), Vic3(Religion)),
    ("GetResolutionWithAspectRatio", Args::Args(&[]), CVector2f),
    ("GetRomanNumeral", Args::Args(&[DType(int32)]), CString),
    ("GetSelectedFormationsList", Args::Args(&[]), CString),
    ("GetSelectedMapMode", Args::Args(&[]), CVector2i),
    ("GetSelectedMapModeName", Args::Args(&[]), CString),
    ("GetSmallFlagFrameSize", Args::Args(&[]), CVector2i),
    ("GetSmallPowerBlocCoaFrameSize", Args::Args(&[]), CVector2i),
    ("GetSmartBrushInterpolationNames", Args::Args(&[]), Unknown),
    ("GetSmartBrushPatternNames", Args::Args(&[]), Unknown),
    ("GetStarvationTypes", Args::Args(&[]), Unknown),
    ("GetStateRegion", Args::Args(&[IType(Item::StateRegion)]), Vic3(StateRegion)),
    ("GetStaticModifier", Args::Args(&[IType(Item::Modifier)]), Vic3(Modifier)),
    ("GetStrategicRegion", Args::Args(&[IType(Item::StrategicRegion)]), Vic3(StrategicRegion)),
    ("GetStringSettingText", Args::Args(&[DType(Unknown)]), CString),
    ("GetString_CPdxFloatRect", Args::Args(&[DType(Vic3(CPdxFloatRect))]), CString),
    ("GetString_CPdxIntRect", Args::Args(&[DType(Vic3(CPdxIntRect))]), CString),
    ("GetString_CVector2f", Args::Args(&[DType(CVector2f)]), CString),
    ("GetString_CVector2i", Args::Args(&[DType(CVector2i)]), CString),
    ("GetString_CVector3f", Args::Args(&[DType(CVector3f)]), CString),
    ("GetString_CVector3i", Args::Args(&[DType(CVector3i)]), CString),
    ("GetString_CVector4f", Args::Args(&[DType(CVector4f)]), CString),
    ("GetString_CVector4i", Args::Args(&[DType(CVector4i)]), CString),
    ("GetSubjectType", Args::Args(&[IType(Item::SubjectType)]), Vic3(SubjectType)),
    ("GetSubjectTypes", Args::Args(&[]), Unknown),
    ("GetSubjectTypesList", Args::Args(&[]), CString),
    ("GetSupplyNetworkColorstring", Args::Args(&[DType(CFixedPoint)]), CString),
    ("GetSupportLabelsDesc", Args::Args(&[]), CString),
    ("GetTechnology", Args::Args(&[IType(Item::Technology)]), Vic3(Technology)),
    ("GetTrendIcon", Args::Args(&[DType(Vic3(DataTrend))]), CString),
    ("GetTrendIconFor", Args::Args(&[DType(Unknown), DType(Unknown)]), CString),
    ("GetTrendPlotPoints", Args::Args(&[DType(Unknown)]), Unknown),
    ("GetTrendPlotPointsAbsolute", Args::Args(&[DType(Unknown)]), Unknown),
    ("GetTrendPlotPointsNormalized", Args::Args(&[DType(Vic3(DataTrend)), DType(CFixedPoint), DType(CFixedPoint)]), Unknown),
    ("GetTrendValue", Args::Args(&[DType(Vic3(DataTrend))]), CFixedPoint),
    ("GetTrendValueFor", Args::Args(&[DType(Unknown), DType(Unknown)]), CFixedPoint),
    ("GetUnitStrengthHeader", Args::Args(&[DType(int64), DType(int64), DType(CString)]), CString),
    ("GetUnitStrengthHeaderNoIcon", Args::Args(&[DType(Unknown), DType(Unknown)]), CString),
    ("GetVarTimeRemaining", Args::Args(&[DType(Unknown), DType(Unknown)]), int32),
    ("GetVeryLargePowerBlocCoaFrameSize", Args::Args(&[]), CVector2i),
    ("GetVerySmallPowerBlocCoaFrameSize", Args::Args(&[]), CVector2i),
    ("GetWikiUrl", Args::Args(&[]), Unknown),
    ("GetYoutubeChannelUrl", Args::Args(&[]), Unknown),
    ("GfxGetSkins", Args::Args(&[]), Unknown),
    ("GfxSetActiveSkin", Args::Args(&[DType(Unknown)]), void),
    ("GfxSkinIsActive", Args::Args(&[DType(Unknown)]), bool),
    ("GoToFrontend", Args::Args(&[]), void),
    ("GreaterThanOrEqualTo_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("GreaterThanOrEqualTo_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("GreaterThanOrEqualTo_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("GreaterThanOrEqualTo_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("GreaterThanOrEqualTo_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("GreaterThanOrEqualTo_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("GreaterThan_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("GreaterThan_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("GreaterThan_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("GreaterThan_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("GreaterThan_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("GreaterThan_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("HasAnyAvailableNewThemes", Args::Args(&[]), bool),
    ("HasAnySelections", Args::Args(&[DType(Unknown)]), bool),
    ("HasAnyThemeIssues", Args::Args(&[]), bool),
    ("HasCitiesOutOfState", Args::Args(&[]), bool),
    ("HasDlcFeature", Args::Args(&[IType(Item::DlcFeature)]), bool),
    ("HasGameLoadedToMainMenu", Args::Args(&[]), bool),
    ("HasGameStartedForTheFirstTime", Args::Args(&[]), bool),
    ("HasGameState", Args::Args(&[]), bool),
    ("HasHostError", Args::Args(&[]), bool),
    ("HasValidSelectedFormationsToCancelStrategicObjective", Args::Args(&[DType(Unknown)]), bool),
    ("HasValidSelectedFormationsToSetStrategicObjective", Args::Args(&[DType(Unknown)]), bool),
    ("InDebugMode", Args::Args(&[]), bool),
    ("InReleaseMode", Args::Args(&[]), bool),
    ("IntToFixedPoint", Args::Args(&[DType(int32)]), CFixedPoint),
    ("IntToFloat", Args::Args(&[DType(int32)]), float),
    ("IntToFrameIndex", Args::Args(&[DType(int32)]), int32),
    ("IntToUnsigned", Args::Args(&[DType(int32)]), uint32),
    ("IsCameraRestrictionsEnabled", Args::Args(&[]), bool),
    ("IsCurrentProductionMethod", Args::Args(&[DType(Unknown)]), bool),
    ("IsDataModelEmpty", Args::Args(&[DType(Unknown)]), bool),
    ("IsDrawCityDebugGrid", Args::Args(&[]), bool),
    ("IsDrawCityDebugSpheres", Args::Args(&[]), bool),
    ("IsDynTrendEmpty", Args::Args(&[DType(Unknown)]), bool),
    ("IsDynamicTerrainAutoUpdate", Args::Args(&[]), bool),
    ("IsDynamicsEnabled", Args::Args(&[]), bool),
    ("IsEmpty", Args::Args(&[DType(Unknown)]), bool),
    ("IsEven_int32", Args::Args(&[DType(int32)]), bool),
    ("IsEven_int64", Args::Args(&[DType(int64)]), bool),
    ("IsEven_uint32", Args::Args(&[DType(uint32)]), bool),
    ("IsEven_uint64", Args::Args(&[DType(uint64)]), bool),
    ("IsGameChecksumOk", Args::Args(&[]), bool),
    ("IsGameOverScreenShown", Args::Args(&[]), bool),
    ("IsGamePaused", Args::Args(&[]), bool),
    ("IsHost", Args::Args(&[]), bool),
    ("IsInGame", Args::Args(&[]), bool),
    ("IsIronmanEnabled", Args::Args(&[]), bool),
    ("IsLoadedFromSave", Args::Args(&[]), bool),
    ("IsMapModeIndexSelected", Args::Args(&[DType(Unknown)]), bool),
    ("IsMapModeLocked", Args::Args(&[]), bool),
    ("IsMapModeSelected", Args::Args(&[DType(Unknown)]), bool),
    ("IsObserver", Args::Args(&[]), bool),
    ("IsOdd_int32", Args::Args(&[DType(int32)]), bool),
    ("IsOdd_int64", Args::Args(&[DType(int64)]), bool),
    ("IsOdd_uint32", Args::Args(&[DType(uint32)]), bool),
    ("IsOdd_uint64", Args::Args(&[DType(uint64)]), bool),
    ("IsPauseMenuShown", Args::Args(&[]), bool),
    ("IsPotential", Args::Args(&[DType(Vic3(Command))]), bool),
    ("IsPreparationLobby", Args::Args(&[]), bool),
    ("IsRedundant", Args::Args(&[DType(Vic3(Command))]), bool),
    ("IsSaving", Args::Args(&[]), bool),
    ("IsTerrainManipulatorProvincesPreview", Args::Args(&[]), bool),
    ("IsTutorialLessonActive", Args::Args(&[DType(Unknown)]), bool),
    ("IsValid", Args::Args(&[DType(Vic3(Command))]), bool),
    ("IsZoomLevelFar", Args::Args(&[]), bool),
    ("IsZoomLevelMax", Args::Args(&[]), bool),
    ("IsZoomLevelMid", Args::Args(&[]), bool),
    ("IsZoomLevelNear", Args::Args(&[]), bool),
    ("JoinText", Args::Args(&[DType(Unknown), DType(Unknown), DType(Unknown)]), CString),
    ("JominiAccessPlayerJoinRequests", Args::Args(&[]), Unknown),
    ("JominiAreAchievementsAvailable", Args::Args(&[]), bool),
    ("JominiGetAchievementsNotAvailableString", Args::Args(&[]), CString),
    ("JominiGetMultiplayerAccessibleString", Args::Args(&[]), CString),
    ("JominiHasPlayerJoinRequests", Args::Args(&[]), bool),
    ("JominiIsHostOrLocal", Args::Args(&[]), bool),
    ("JominiIsMultiplayerAccessible", Args::Args(&[]), bool),
    ("JominiMultiplayerIsCrossplayEnabled", Args::Args(&[]), bool),
    ("JominiMultiplayerIsCrossplayFilterAvailable", Args::Args(&[]), bool),
    ("JominiPlayer", Args::Args(&[]), Vic3(Playable)),
    ("LessThanOrEqualTo_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("LessThanOrEqualTo_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("LessThanOrEqualTo_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("LessThanOrEqualTo_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("LessThanOrEqualTo_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("LessThanOrEqualTo_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("LessThan_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("LessThan_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("LessThan_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("LessThan_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("LessThan_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("LessThan_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("Localize", Args::Args(&[DType(CString)]), CString),
    ("LocalizeInputAction", Args::Args(&[DType(Unknown)]), CString),
    ("MakeScopeBool", Args::Args(&[DType(bool)]), Scope),
    ("MakeScopeFlag", Args::Args(&[DType(Unknown)]), Scope),
    ("MakeScopeValue", Args::Args(&[DType(CFixedPoint)]), Scope),
    ("Max_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Max_float", Args::Args(&[DType(float), DType(float)]), float),
    ("Max_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Max_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Max_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Max_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("MergeSelectedFormations", Args::Args(&[]), Vic3(Command)),
    ("Min_CFixedPoint", Args::Args(&[DType(Unknown), DType(Unknown)]), CFixedPoint),
    ("Min_float", Args::Args(&[DType(Unknown), DType(Unknown)]), float),
    ("Min_int32", Args::Args(&[DType(Unknown), DType(Unknown)]), int32),
    ("Min_int64", Args::Args(&[DType(Unknown), DType(Unknown)]), int64),
    ("Min_uint32", Args::Args(&[DType(Unknown), DType(Unknown)]), uint32),
    ("Min_uint64", Args::Args(&[DType(Unknown), DType(Unknown)]), uint64),
    ("MobilizeSelectedArmies", Args::Args(&[]), Vic3(Command)),
    ("Modulo_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Modulo_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Modulo_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Modulo_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("Multiply_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Multiply_CVector2f", Args::Args(&[DType(CVector2f), DType(CVector2f)]), CVector2f),
    ("Multiply_float", Args::Args(&[DType(float), DType(float)]), float),
    ("Multiply_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Multiply_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Multiply_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Multiply_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("NOP", Args::Args(&[]), void),
    ("Nbsp", Args::Args(&[]), CString),
    ("Negate_CFixedPoint", Args::Args(&[DType(CFixedPoint)]), CFixedPoint),
    ("Negate_float", Args::Args(&[DType(float)]), float),
    ("Negate_int32", Args::Args(&[DType(int32)]), int32),
    ("Negate_int64", Args::Args(&[DType(int64)]), int64),
    ("Not", Args::Args(&[DType(bool)]), bool),
    ("NotEqualTo_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), bool),
    ("NotEqualTo_CVector2f", Args::Args(&[DType(CVector2f), DType(CVector2f)]), bool),
    ("NotEqualTo_float", Args::Args(&[DType(float), DType(float)]), bool),
    ("NotEqualTo_int32", Args::Args(&[DType(int32), DType(int32)]), bool),
    ("NotEqualTo_int64", Args::Args(&[DType(int64), DType(int64)]), bool),
    ("NotEqualTo_uint32", Args::Args(&[DType(uint32), DType(uint32)]), bool),
    ("NotEqualTo_uint64", Args::Args(&[DType(uint64), DType(uint64)]), bool),
    ("ObjectsEqual", Args::Args(&[DType(Unknown), DType(Unknown)]), bool),
    ("ObserveCountryCommand", Args::Args(&[DType(Unknown)]), Vic3(Command)),
    ("OnCreateAccount", Args::Args(&[]), void),
    ("OnToggleLoginWindow", Args::Args(&[]), void),
    ("OpenAchievements", Args::Args(&[]), void),
    ("OpenDiscordUrl", Args::Args(&[]), void),
    ("OpenGameRules", Args::Args(&[]), void),
    ("OpenPlayerResourcesUrl", Args::Args(&[]), void),
    ("OpenWikiUrl", Args::Args(&[]), void),
    ("OpenYoutubeChannelUrl", Args::Args(&[]), void),
    ("Or", Args::Args(&[DType(bool), DType(bool)]), bool),
    ("Or3", Args::Args(&[DType(bool), DType(bool), DType(bool)]), bool),
    ("Or4", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("Or5", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("Or6", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("Or7", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("Or8", Args::Args(&[DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool), DType(bool)]), bool),
    ("PauseAllConstruction", Args::Args(&[]), Vic3(Command)),
    ("PauseAllConstructionTooltip", Args::Args(&[]), CString),
    ("PdxClearEditBoxText", Args::Args(&[DType(Unknown)]), void),
    ("PdxGetProfilerNames", Args::Args(&[]), Unknown),
    ("PdxGetWidgetScreenSize", Args::Args(&[DType(Unknown)]), CVector2f),
    ("PdxGuiDestroyWidget", Args::Args(&[DType(Unknown)]), void),
    ("PdxGuiEditboxGetText", Args::Args(&[DType(Unknown)]), CUTF8String),
    ("PdxGuiInterruptAllAnimations", Args::Args(&[DType(Unknown)]), void),
    ("PdxGuiInterruptThenTriggerAllAnimations", Args::Args(&[DType(Unknown), DType(Unknown)]), void),
    ("PdxGuiTriggerAllAnimations", Args::Args(&[DType(Unknown)]), void),
    ("PdxProfilerFilterNext", Args::Args(&[]), void),
    ("PdxProfilerFilterPrev", Args::Args(&[]), void),
    ("PdxProfilerFilterTimers", Args::Args(&[]), void),
    ("PdxProfilerGetCurrentFrame", Args::Args(&[]), int32),
    ("PdxProfilerGetFrameTimeMs", Args::Args(&[]), float),
    ("PdxProfilerGetNsPerTick", Args::Args(&[]), float),
    ("PdxProfilerGuiGraphLinesEnabled", Args::Args(&[]), bool),
    ("PdxProfilerGuiToggleGraphLines", Args::Args(&[]), void),
    ("PdxProfilerGuiToggleStats", Args::Args(&[]), void),
    ("PdxProfilerGuiTrackCurrentFrame", Args::Args(&[]), void),
    ("PdxProfilerGuiWriteFrameCSV", Args::Args(&[]), void),
    ("PdxProfilerIsRecording", Args::Args(&[]), bool),
    ("PdxProfilerSelectThread", Args::Args(&[]), void),
    ("PdxProfilerSetFrame", Args::Args(&[]), void),
    ("PdxProfilerToggleRecording", Args::Args(&[]), void),
    ("PlayerIsHost", Args::Args(&[]), bool),
    ("PopCursorOverride", Args::Args(&[]), void),
    ("PushCursorOverride", Args::Args(&[DType(Unknown)]), void),
    ("RaiseConscriptsInSelectedArmies", Args::Args(&[]), Vic3(Command)),
    ("ReleaseMode", Args::Args(&[]), bool),
    ("RemoveTempMapMode", Args::Args(&[]), void),
    ("ResetCursorOverrides", Args::Args(&[]), void),
    ("ResumeAllConstruction", Args::Args(&[]), Vic3(Command)),
    ("ResumeAllConstructionTooltip", Args::Args(&[]), CString),
    ("ReturnToMenu", Args::Args(&[]), void),
    ("ScaleToFitElementInside", Args::Args(&[DType(Unknown), DType(Unknown)]), float),
    ("ScaleToFitElementOutside", Args::Args(&[DType(Unknown), DType(Unknown)]), float),
    ("ScrollPanelToNamedWidget", Args::Args(&[DType(Unknown), DType(Unknown)]), void),
    ("ScrollPanelToTop", Args::Args(&[DType(Unknown)]), void),
    ("SelectEnumWithString", Args::Args(&[DType(Unknown), DType(Unknown)]), void),
    ("SelectLocalization", Args::Args(&[DType(bool), DType(CString), DType(CString)]), CString),
    ("SelectSound", Args::Args(&[DType(bool), DType(Unknown), DType(Unknown)]), Unknown),
    ("Select_CFixedPoint", Args::Args(&[DType(bool), DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Select_CString", Args::Args(&[DType(bool), DType(CString), DType(CString)]), CString),
    ("Select_CVector2f", Args::Args(&[DType(bool), DType(CVector2f), DType(CVector2f)]), CVector2f),
    ("Select_CVector2i", Args::Args(&[DType(bool), DType(CVector2i), DType(CVector2i)]), CVector2i),
    ("Select_CVector3f", Args::Args(&[DType(bool), DType(CVector3f), DType(CVector3f)]), CVector3f),
    ("Select_CVector3i", Args::Args(&[DType(bool), DType(CVector3i), DType(CVector3i)]), CVector3i),
    ("Select_CVector4f", Args::Args(&[DType(bool), DType(CVector4f), DType(CVector4f)]), CVector4f),
    ("Select_CVector4i", Args::Args(&[DType(bool), DType(CVector4i), DType(CVector4i)]), CVector4i),
    ("Select_float", Args::Args(&[DType(bool), DType(float), DType(float)]), float),
    ("Select_int16", Args::Args(&[DType(bool), DType(int16), DType(int16)]), int16),
    ("Select_int32", Args::Args(&[DType(bool), DType(int32), DType(int32)]), int32),
    ("Select_int64", Args::Args(&[DType(bool), DType(int64), DType(int64)]), int64),
    ("Select_int8", Args::Args(&[DType(bool), DType(int8), DType(int8)]), int8),
    ("Select_uint16", Args::Args(&[DType(bool), DType(uint16), DType(uint16)]), uint16),
    ("Select_uint32", Args::Args(&[DType(bool), DType(uint32), DType(uint32)]), uint32),
    ("Select_uint64", Args::Args(&[DType(bool), DType(uint64), DType(uint64)]), uint64),
    ("Select_uint8", Args::Args(&[DType(bool), DType(uint8), DType(uint8)]), uint8),
    ("SetCameraRestrictionsEnabled", Args::Args(&[DType(Unknown)]), void),
    ("SetCanOpenRightClickContextMenu", Args::Args(&[DType(Unknown)]), void),
    ("SetCharacterOrderForSelectedFormations", Args::Args(&[DType(Unknown)]), Vic3(Command)),
    ("SetDrawCityDebugGrid", Args::Args(&[DType(Unknown)]), void),
    ("SetDrawCityDebugSpheres", Args::Args(&[DType(Unknown)]), void),
    ("SetDynamicTerrainAutoUpdate", Args::Args(&[DType(Unknown)]), void),
    ("SetDynamicsEnabled", Args::Args(&[DType(Unknown)]), void),
    ("SetInteraction", Args::Args(&[DType(Unknown)]), void),
    ("SetIronmanEnabledStatus", Args::Args(&[DType(Unknown)]), void),
    ("SetLockedMapMode", Args::Args(&[]), void),
    ("SetRandomPlayableObserverCharacter", Args::Args(&[]), void),
    ("SetStrategicObjective", Args::Args(&[DType(Unknown), DType(Unknown)]), Vic3(Command)),
    ("SetStrategicObjectiveForSelectedFormations", Args::Args(&[DType(Unknown)]), Vic3(Command)),
    ("SetTempMapModeByKey", Args::Args(&[DType(Unknown)]), void),
    ("SetTerrainManipulatorProvincesPreview", Args::Args(&[DType(Unknown)]), void),
    ("ShouldAskConfirmation", Args::Args(&[DType(Unknown)]), bool),
    ("ShouldShowAnimationInfo", Args::Args(&[]), bool),
    ("ShouldShowSegmentedControlForSetting", Args::Args(&[DType(Unknown)]), bool),
    ("StatusCanLogin", Args::Args(&[]), bool),
    ("StatusGetLoginStatus", Args::Args(&[]), CUTF8String),
    ("StatusGetUserEmailMasked", Args::Args(&[]), CUTF8String),
    ("StatusGetUserName", Args::Args(&[]), CUTF8String),
    ("StatusIsAccountConnected", Args::Args(&[]), bool),
    ("StatusIsLoggedIn", Args::Args(&[]), bool),
    ("StatusIsLoggingIn", Args::Args(&[]), bool),
    ("StatusIsOffline", Args::Args(&[]), bool),
    ("StatusIsSupportConnectedAccount", Args::Args(&[]), bool),
    ("StatusIsUserNameEmpty", Args::Args(&[]), bool),
    ("StringIsEmpty", Args::Args(&[DType(CString)]), bool),
    ("Subtract_CFixedPoint", Args::Args(&[DType(CFixedPoint), DType(CFixedPoint)]), CFixedPoint),
    ("Subtract_CVector2f", Args::Args(&[DType(CVector2f), DType(CVector2f)]), CVector2f),
    ("Subtract_float", Args::Args(&[DType(float), DType(float)]), float),
    ("Subtract_int32", Args::Args(&[DType(int32), DType(int32)]), int32),
    ("Subtract_int64", Args::Args(&[DType(int64), DType(int64)]), int64),
    ("Subtract_uint32", Args::Args(&[DType(uint32), DType(uint32)]), uint32),
    ("Subtract_uint64", Args::Args(&[DType(uint64), DType(uint64)]), uint64),
    ("TextureListFormatSize", Args::Args(&[DType(Unknown)]), CString),
    ("TextureListFormatkB", Args::Args(&[DType(Unknown)]), CString),
    ("ToString_int16", Args::Args(&[DType(int16)]), CString),
    ("ToString_int32", Args::Args(&[DType(int32)]), CString),
    ("ToString_int64", Args::Args(&[DType(int64)]), CString),
    ("ToString_int8", Args::Args(&[DType(int8)]), CString),
    ("ToString_uint16", Args::Args(&[DType(uint16)]), CString),
    ("ToString_uint32", Args::Args(&[DType(uint32)]), CString),
    ("ToString_uint64", Args::Args(&[DType(uint64)]), CString),
    ("ToString_uint8", Args::Args(&[DType(uint8)]), CString),
    ("ToggleEncyclopedia", Args::Args(&[]), void),
    ("ToggleInteraction", Args::Args(&[DType(Unknown)]), void),
    ("ToggleMainMenu", Args::Args(&[]), void),
    ("ToggleMessageSettings", Args::Args(&[]), void),
    ("ToggleMessageSettingsForSingleItem", Args::Args(&[DType(Unknown)]), void),
    ("ToggleMusicPlayer", Args::Args(&[]), void),
    ("ToggleObserveCountry", Args::Args(&[DType(Vic3(Country))]), void),
    ("ToggleThemeSettings", Args::Args(&[]), void),
    ("TransparentIfFalse", Args::Args(&[DType(bool)]), float),
    ("TransparentIfTrue", Args::Args(&[DType(bool)]), float),
    ("TransparentIfZero", Args::Args(&[DType(CFixedPoint)]), float),
    ("TransparentIfZero_int32", Args::Args(&[DType(int32)]), float),
    ("TransparentIfZero_int64", Args::Args(&[DType(int64)]), float),
    ("Unfocus", Args::Args(&[DType(Unknown)]), void),
    ("UnlockMapMode", Args::Args(&[]), void),
    ("UpdateDynamicTerrainInAllProvinces", Args::Args(&[]), void),
    ("UsesTimerLocking", Args::Args(&[]), bool),
    ("Vector3fToColor", Args::Args(&[DType(CVector3f)]), CVector4f),
    ("Vector3iToColor", Args::Args(&[DType(CVector3i)]), CVector4f),
    ("Vector4iToColor", Args::Args(&[DType(CVector4i)]), CVector4f),
]
