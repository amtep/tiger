use serde::{Deserialize, Serialize};
use strum_macros::{Display, EnumString};

#[derive(Clone, Copy, Debug, PartialEq, Eq, Display, EnumString, Hash, Serialize, Deserialize)]
#[strum(use_phf)]
#[strum(serialize_all = "kebab-case")]
#[serde(rename_all = "kebab-case")]
pub enum ErrorKey {
    Config,
    ReadError,
    ParseError,
    BraceError,
    BracePlacement,
    ReaderDirectives,
    Packaging,
    Validation,
    Structure,
    Filename,
    Encoding,
    Localization,
    Markup,
    DuplicateItem,
    ExactDuplicateItem,
    DuplicateField,
    DuplicateCharacter,
    NameConflict,
    EventNamespace,
    MissingLocalization,
    SuggestLocalization,
    MissingFile,
    MissingSound,
    MissingItem,
    MissingPerspective,
    ExtraFile,
    WrongGender,
    Conflict,
    ImageFormat,
    ImageSize,
    Unneeded,
    Scopes,
    /// This seems like it solves the same problem that `Confidence` solves.
    StrictScopes,
    Crash,
    Range,
    Tooltip,
    IfElse,
    Rivers,
    Modifiers,
    Macro,
    History,
    Logic,
    Bugs,
    Datafunctions,
    Removed,
    FieldMissing,
    UnknownField,
    TitleTier,
    Colors,
    UnusedLocalization,
    LocalizationKeyCollision,
    UnusedFile,
    UnknownList,
    Choice,
    UseOfThis,
    CharacterId,
    Loop,
    Bookmarks,
    WrongGame,
    Gui,
    Performance,
    Overflow,
    Deprecated,
    Variables,
    DefinitionName,

    PrincesOfDarkness,

    Internal,
}
